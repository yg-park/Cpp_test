	<2장 - c++ 프로그래밍의 기본>

구조적(순서중시) 프로그래밍
no back 프로그래밍
main 함수는 1개 있어야함(MFC, C#은 없어도됨)
/*
임베디드 GUI
리눅스에서 BSP
Qt5를 사용

윈도우는 C#, MFC
*/
iostream : cin cout

string

기본적(c제외)으로 DB는 숫자(double), 문자를 문자로 인식함

<< : indirection, 한 문장씩 출력
끝은 \n, std::endl

함수선언-원형-main

namespace : 공동작업(공유, 협업) 등에서 이름 충돌 해결
이름공간::이름
using namespace std : cin cout 앞의 std:: 생략 가능

>> : 키보드

임베디드 : 시리얼포트로 출력

white space : sp ent tap

버퍼를 경유하지 않는 함수 getch(getche)

변수선언 : 아무곳이나 가능
타이핑 오류 줄임/찾기 어려움 - 앞에 몰아서 하는것이 좋다.

문자열 표현 2가지
/*cgets(console gets) 갯수 정하기 / 네트워크 시리얼통신 등
gets \0이 붙으면 끝으로 인식, 공백을 포함해서 받아들임

tcp/ip : 패킷 최대 256개씩
데이터를 받는것은 게이트웨이
*/
1. c-string 방식 
\0로 끝남
strcmp(비교했을 때 같으면 0) strlen(0부터 \0까지 개수) strcpy
배열의 size와 상관없이 입력된다

cin.getline(변수, 최대개수, 끝문자) 빈칸이 있어도 특정 키 입력까지
getline(cin, 문자열)
#include <cstring> 추가하기

2. string 형
강력추천
표준 크기제약x 
복사,비교,수정을 위한 함수와 연산자
객체지향
#include <string> 추가하기

c++ : 파일확장자 x         리눅스 : ./파일이름


	<3장 - 클래스와 객체>

캡슐화

객체 일부분 공개(함수)
상태 - 변수
행동 - 함수

클래스 : 객체를 위한 틀(텍)
실체가 아니고 [멤버변수와 멤버함수] 선언
c에서는 변수만 넣었지만 cpp에서는 함수도 가능
숨기는 변수 : private
보이는 함수 : public
상속의 경우 : protect
{클래스 만드는 것 연습 하기}
 생성자 : 클래스 내의 자동 호출되는 멤버함수(클래스 이름과 같다)
            선언할 때 초기화 하기
	메모리설정함수생성
	장치연결
            리턴타입 없음
	객체 생성 마다 한번만 호출
	중복 가능 - 오버로딩
	생성자 없으면 기본으로 생성(기본생성자)
	하나라도 있으면 자동생성하지 않는다
 소멸자 : 소멸되는 시점에 자동 호출 - "~"로 표현
	자동으로 생성
	메모리설정함수해제
	장치연결해제
	중복 불가능 - 오직 1개만 존재
	생성된 역순으로 소멸
	리턴타입 없음
	오직 한번만 자동 호출	

new/delete

접근지정
private - 동일한 클래스의 멤버함수 / 보안
public - 모든 클래스
protect - 자신과 상속받은 클래스 / 보안
virture 함수재정의 - 오버라이딩

인라인 함수(inline)
매크로와 유사
오버헤드가 존재하지 않음
컴파일러가 결정
재귀호출, 긴 함수, static변수, 반복문 등 함수는 수용하지 않는다
실행시간이 빠르다 / 전체 코드 크기 증가

c++ 구조체
클래스와 동일
디폴트가 puiblic
c언어와의 호환을 위해

구조체/클래스
c는 구조체
나머지 객체지향언어는 클래스를 사용하기 때문에 호환성을 위해 클래스를 쓴다

★★★클래스를 헤더파일과 cpp 파일로 분리하여 작성한다
선언부 - 헤더
구현부 - cpp 
목적 : 클래스 재사용
#ifndef CIRCLE_H    선언이 안되어있으면
#include CIRCLE_H  선언하라


	<4장 - 객체 포인터와 객체 배열, 객체의 동적 생성>
객체 포인터
/*
포인터 > 데이터 최대 전달 수 8바이트(64비트) 
	한번에 많은 양의 데이터를 보내기 위해
	주소를 매개체로 데이터를 다룸
*/
->를 이용한다
p->getArea() = (*p).getArea()

객체 배열
기본 생성자가 있어야 한다

정적 메모리 할당
변수 선언을 통해 할당
동적 메모리 할당 malloc, free -> new, delete
사이즈 없으면 프로그램 작성시 할당 받을 수 없다
힙 메모리에서 할당

	"데이터타입 *포인터변수 = new 데이터타입;
	 delete 포인터변수"

c에서는 malloc를 각각 하고 free는 한번에 했지만
cpp에서는 모두 각각 해야한다
private인지 public인지 구분할 수 없다
생성자에게 new로 할당하지 않음 
new로 포인터 연결 후 delete 해도 연결이 끊기고 포인터는 살아있다.
new 없이 delete 불가능
delete 중복 불가능

	"데이터타입 *포인터변수 = new 데이터타입[배열크기];
	 delete [] 포인터변수;
생성을 하고 소멸 안하면 컴파일은 되나 프로그램이 종료되면 삭제됨
메모리 관리로 실행 프로그램이 지속되게 하기 위한 목적

this
객체 자신 포인터
클래스 내에서만 사용
컴파일러가 선언한 변수
매개변수의 이름과 멤버변수의 이름이 같은 경우
멤버함수가 아닌 함수에서 this 사용 불가
static 멤버함수에서 this 사용 불가

string클래스
string 헤더파일에 선언
가변크기의 문자열
















































































